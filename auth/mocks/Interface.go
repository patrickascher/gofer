// Code generated by mockery v2.4.0-beta. DO NOT EDIT.

package mocks

import (
	auth "github.com/patrickascher/gofer/auth"
	controller "github.com/patrickascher/gofer/controller"

	mock "github.com/stretchr/testify/mock"
)

// Interface is an autogenerated mock type for the Interface type
type Interface struct {
	mock.Mock
}

// ChangePassword provides a mock function with given fields: p
func (_m *Interface) ChangePassword(p controller.Interface) error {
	ret := _m.Called(p)

	var r0 error
	if rf, ok := ret.Get(0).(func(controller.Interface) error); ok {
		r0 = rf(p)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ForgotPassword provides a mock function with given fields: p
func (_m *Interface) ForgotPassword(p controller.Interface) error {
	ret := _m.Called(p)

	var r0 error
	if rf, ok := ret.Get(0).(func(controller.Interface) error); ok {
		r0 = rf(p)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Login provides a mock function with given fields: p
func (_m *Interface) Login(p controller.Interface) (auth.Schema, error) {
	ret := _m.Called(p)

	var r0 auth.Schema
	if rf, ok := ret.Get(0).(func(controller.Interface) auth.Schema); ok {
		r0 = rf(p)
	} else {
		r0 = ret.Get(0).(auth.Schema)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(controller.Interface) error); ok {
		r1 = rf(p)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Logout provides a mock function with given fields: p
func (_m *Interface) Logout(p controller.Interface) error {
	ret := _m.Called(p)

	var r0 error
	if rf, ok := ret.Get(0).(func(controller.Interface) error); ok {
		r0 = rf(p)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RegisterAccount provides a mock function with given fields: p
func (_m *Interface) RegisterAccount(p controller.Interface) error {
	ret := _m.Called(p)

	var r0 error
	if rf, ok := ret.Get(0).(func(controller.Interface) error); ok {
		r0 = rf(p)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
